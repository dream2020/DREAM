 /** @file sandtrayServerDriverController.h 
  *
  * Version 1.0
  * 
  * Generated by YarpGenerator, Emmanuel Senft, PLYM
  *
  *
  * \defgroup DREAM_cognitiveComponent sandtrayServerDriver
  * 
  * Main class with code, use the yarpInterface class to communicate with the other components.
  * 
  * \section lib_sec Libraries
  *
  * None
  *
  * \section in_files_sec Input Data Files
  *
  * None
  *
  * \section out_data_sec Output Data Files
  *
  * None
  *
  * \author 
  * 
  * <James Kennedy>, <Plymouth University>  
  * 
  * Copyright (C) 2014 DREAM Consortium
  * 
  */

/* 
 * Copyright (C) 2014 DREAM Consortium
 * FP7 Project 611391 co-funded by the European Commission
 *
 * Author:  James Kennedy, Plymouth University 
 * Email:   james.kennedy@plymouth.ac.uk 
 * Website: www.dream2020.eu 
 * 
 * This file is part of DREAM.
 * 
 * DREAM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * DREAM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DREAM.  If not, see <http://www.gnu.org/licenses/>.
 */

 
 /* 
  * Audit Trail
  * -----------
  * 23/06/2016 Version 1.0: ... (James Kennedy)
  */ 
 
#ifndef SANDTRAYSERVERDRIVERCONTROLLER
#define SANDTRAYSERVERDRIVERCONTROLLER

#include <iostream>
#include <string>
#include <vector>
#include <stdlib.h>
#include <sstream>
#include <windows.h>

class SandtrayServerDriverYarpInterface;

class SandtrayServerDriverController{
private:
	SandtrayServerDriverYarpInterface* _yarpInterface;
	bool _bPatternTest;

public:
	/* class methods */
	SandtrayServerDriverController(SandtrayServerDriverYarpInterface *yarpInterface);
   //Need to add the methods calling/being called by the YarpInterface

	void testApp();
	void testPattern();
	void continuePatternTest();
	void verify();
	void quitGame();
	void fail();
	void newGame();
	void resetGame();
	void specifyLevel(int iLevel);
	void enableButtons(int iEnable);
	void moveFinished();
	void getUserData();
	void getImageCoordinates(int iImageId);
	void getImagesLeft();
	void getImageIdsCanMove();
	void getLastImageProperties();
	void goodMove();
	void badMove();
	void spaceMove();
	void getLibraryProperties();
	void getCategoryProperties();
	void lockImages();
	void unlockImages();
	void setFeedbackOn();
	void setFeedbackOff();
	void setOneAtTime(int iOneTime);
	void getShownImgProps();
	void setSpeed(int iSpeed);
	void turnTakeSelect(int iImageId);

	void processEvents(std::string str);
	void processReturns(std::string str);
};

#endif
