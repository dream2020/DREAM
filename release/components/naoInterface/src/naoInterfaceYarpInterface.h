 /** @file naoInterfaceYarpInterface.h 
  *
  * Version 1.0
  * 
  * Generated by YarpGenerator, Emmanuel Senft, PLYM
  *
  *
  * \defgroup DREAM_cognitiveComponent naoInterface
  * 
  * Class used to provided a simpler interface between the main code and the YARP layer.
  * Provide an output function sending data for each port, and an input function called 
  * when a message is received on a port.
  * 
  * \section lib_sec Libraries
  *
  * - YARP.
  *
  * \section portsc_sec Ports Created
  *
  * <b>Port types </b>
  *
  *	BufferedPort<VectorOf<int>>		disableRobotIn;
  *	BufferedPort<VectorOf<int>>		enableRobotIn;
  *	BufferedPort<VectorOf<int>>		gripIn;
  *	BufferedPort<VectorOf<double>>		moveHandIn;
  *	BufferedPort<VectorOf<double>>		moveTorsoIn;
  *	BufferedPort<VectorOf<int>>		releaseIn;
  *	BufferedPort<Bottle>		sayIn;
  *	BufferedPort<VectorOf<int>>		moveSequenceIn;
  *	BufferedPort<VectorOf<double>>		moveHeadIn;
  *	BufferedPort<VectorOf<float>>		pointAtIn;
  *	BufferedPort<Bottle>		sensorFeedbackOut;
  *	BufferedPort<Bottle>		robotMotorFeedbackOut;
  *
  * \section in_files_sec Input Data Files
  *
  * None
  *
  * \section out_data_sec Output Data Files
  *
  * None
  *
  * \author 
  * 
  * <James Kennedy>, <Plymouth University>  
  * 
  * Copyright (C) 2014 DREAM Consortium
  * 
  */

/* 
 * Copyright (C) 2014 DREAM Consortium
 * FP7 Project 611391 co-funded by the European Commission
 *
 * Author:  James Kennedy, Plymouth University 
 * Email:   james.kennedy@plymouth.ac.uk 
 * Website: www.dream2020.eu 
 * 
 * This file is part of DREAM.
 * 
 * DREAM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * DREAM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DREAM.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 /* 
  * Audit Trail
  * -----------
  * 22/06/2016 Version 1.0: ... (James Kennedy)
  */ 
 
#ifndef NAOINTERFACEYARPINTERFACE
#define NAOINTERFACEYARPINTERFACE

#include <iostream>
#include <string>
#include <vector>

#include <yarp/sig/all.h>
#include <yarp/os/all.h>
#include <yarp/os/RFModule.h>
#include <yarp/os/Network.h>
#include <yarp/os/Thread.h>

using namespace yarp::os; 
using namespace yarp::sig;

class NaoInterfaceThread;
class NaoInterfaceController;

class NaoInterfaceYarpInterface{
private:
	NaoInterfaceThread* _yarpThread;
   NaoInterfaceController* _controller;
public:
	/* class methods */
	NaoInterfaceYarpInterface();
   void init(NaoInterfaceThread* yarpThread, NaoInterfaceController* controller);
	void getFromDisableRobot(VectorOf<int> data);
	void getFromEnableRobot(VectorOf<int> data);
	void getFromGrip(VectorOf<int> data);
	void getFromMoveHand(VectorOf<double> data);
	void getFromMoveTorso(VectorOf<double> data);
	void getFromRelease(VectorOf<int> data);
	void getFromSay(Bottle data);
	void getFromMoveSequence(VectorOf<int> data);
	void getFromMoveHead(VectorOf<double> data);
	void getFromPointAt(VectorOf<float> data);
	void sendToSensorFeedback(std::string name, bool value);
	void sendToRobotMotorFeedback(int step, int action, int message, int parameter = -1);
};

#endif
